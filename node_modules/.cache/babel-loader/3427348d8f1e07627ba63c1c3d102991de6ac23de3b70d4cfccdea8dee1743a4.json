{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natno\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\School-Project\\\\ecom-react-natnoppol\\\\src\\\\components\\\\CloudinaryUploadWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloudinaryUploadWidget = ({\n  uwConfig,\n  setPublicId\n}) => {\n  _s();\n  const uploadWidgetRef = useRef(null);\n  const uploadButtonRef = useRef(null);\n  useEffect(() => {\n    const initializeUploadWidget = () => {\n      if (window.cloudinary && uploadButtonRef.current) {\n        // Create upload widget\n        uploadWidgetRef.current = window.cloudinary.createUploadWidget(uwConfig, (error, result) => {\n          if (!error && result && result.event === 'success') {\n            console.log('Upload successful:', result.info);\n            setPublicId(result.info.public_id);\n          }\n        });\n\n        // Add click event to open widget\n        const handleUploadClick = () => {\n          if (uploadWidgetRef.current) {\n            uploadWidgetRef.current.open();\n          }\n        };\n        const buttonElement = uploadButtonRef.current;\n        buttonElement.addEventListener('click', handleUploadClick);\n\n        // Cleanup\n        return () => {\n          buttonElement.removeEventListener('click', handleUploadClick);\n        };\n      }\n    };\n    initializeUploadWidget();\n  }, [uwConfig, setPublicId]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: uploadButtonRef,\n    id: \"upload_widget\",\n    className: \"cloudinary-button\",\n    children: \"Upload\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CloudinaryUploadWidget, \"9d9sswVvx2SYTSIwd81gTObR4nQ=\");\n_c = CloudinaryUploadWidget;\nexport default CloudinaryUploadWidget;\nvar _c;\n$RefreshReg$(_c, \"CloudinaryUploadWidget\");","map":{"version":3,"names":["useEffect","useRef","jsxDEV","_jsxDEV","CloudinaryUploadWidget","uwConfig","setPublicId","_s","uploadWidgetRef","uploadButtonRef","initializeUploadWidget","window","cloudinary","current","createUploadWidget","error","result","event","console","log","info","public_id","handleUploadClick","open","buttonElement","addEventListener","removeEventListener","ref","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/natno/OneDrive/เดสก์ท็อป/School-Project/ecom-react-natnoppol/src/components/CloudinaryUploadWidget.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\nconst CloudinaryUploadWidget = ({ uwConfig, setPublicId }) => {\r\n  const uploadWidgetRef = useRef(null);\r\n  const uploadButtonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const initializeUploadWidget = () => {\r\n      if (window.cloudinary && uploadButtonRef.current) {\r\n        // Create upload widget\r\n        uploadWidgetRef.current = window.cloudinary.createUploadWidget(\r\n          uwConfig,\r\n          (error, result) => {\r\n            if (!error && result && result.event === 'success') {\r\n              console.log('Upload successful:', result.info);\r\n              setPublicId(result.info.public_id);\r\n            }\r\n          }\r\n        );\r\n\r\n        // Add click event to open widget\r\n        const handleUploadClick = () => {\r\n          if (uploadWidgetRef.current) {\r\n            uploadWidgetRef.current.open();\r\n          }\r\n        };\r\n\r\n        const buttonElement = uploadButtonRef.current;\r\n        buttonElement.addEventListener('click', handleUploadClick);\r\n\r\n        // Cleanup\r\n        return () => {\r\n          buttonElement.removeEventListener('click', handleUploadClick);\r\n        };\r\n      }\r\n    };\r\n\r\n    initializeUploadWidget();\r\n  }, [uwConfig, setPublicId]);\r\n\r\n  return (\r\n    <button\r\n      ref={uploadButtonRef}\r\n      id=\"upload_widget\"\r\n      className=\"cloudinary-button\"\r\n    >\r\n      Upload\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CloudinaryUploadWidget;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,eAAe,GAAGP,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMQ,eAAe,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,MAAM,CAACC,UAAU,IAAIH,eAAe,CAACI,OAAO,EAAE;QAChD;QACAL,eAAe,CAACK,OAAO,GAAGF,MAAM,CAACC,UAAU,CAACE,kBAAkB,CAC5DT,QAAQ,EACR,CAACU,KAAK,EAAEC,MAAM,KAAK;UACjB,IAAI,CAACD,KAAK,IAAIC,MAAM,IAAIA,MAAM,CAACC,KAAK,KAAK,SAAS,EAAE;YAClDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,MAAM,CAACI,IAAI,CAAC;YAC9Cd,WAAW,CAACU,MAAM,CAACI,IAAI,CAACC,SAAS,CAAC;UACpC;QACF,CACF,CAAC;;QAED;QACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;UAC9B,IAAId,eAAe,CAACK,OAAO,EAAE;YAC3BL,eAAe,CAACK,OAAO,CAACU,IAAI,CAAC,CAAC;UAChC;QACF,CAAC;QAED,MAAMC,aAAa,GAAGf,eAAe,CAACI,OAAO;QAC7CW,aAAa,CAACC,gBAAgB,CAAC,OAAO,EAAEH,iBAAiB,CAAC;;QAE1D;QACA,OAAO,MAAM;UACXE,aAAa,CAACE,mBAAmB,CAAC,OAAO,EAAEJ,iBAAiB,CAAC;QAC/D,CAAC;MACH;IACF,CAAC;IAEDZ,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACL,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAE3B,oBACEH,OAAA;IACEwB,GAAG,EAAElB,eAAgB;IACrBmB,EAAE,EAAC,eAAe;IAClBC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC9B;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAAC3B,EAAA,CA/CIH,sBAAsB;AAAA+B,EAAA,GAAtB/B,sBAAsB;AAiD5B,eAAeA,sBAAsB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}