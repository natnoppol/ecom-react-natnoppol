{"ast":null,"code":"import _objectSpread from\"C:/Users/natno/OneDrive/\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B/School-Project/ecom-react-natnoppol/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createContext,useState,useContext,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export function CartProvider(_ref){let{children}=_ref;const[cart,setCart]=useState([]);// Load cart from localStorage on mount\nuseEffect(()=>{const savedCart=localStorage.getItem(\"cart\");if(savedCart){console.log(\"Cart loaded from localStorage:\",savedCart);// Debug log\nsetCart(JSON.parse(savedCart));// Set the cart from localStorage\n}else{console.log(\"No cart found in localStorage\");// Debug log if there's no cart in localStorage\n}},[]);// Keep localStorage in sync with state\nuseEffect(()=>{if(cart.length>0){console.log(\"Updating localStorage with cart:\",cart);// Debug log\nlocalStorage.setItem(\"cart\",JSON.stringify(cart));// Sync with localStorage\n}},[cart]);const updateCart=updatedCart=>{setCart(updatedCart);};const addToCart=product=>{console.log(\"Adding product to cart:\",product);// Debug log\nsetCart(prevCart=>{const existingItem=prevCart.find(item=>item.data.id===product.data.id);let newCart;if(existingItem){newCart=prevCart.map(item=>item.data.id===product.data.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item);}else{newCart=[...prevCart,{data:product.data,quantity:1}];}console.log(\"New cart after add:\",newCart);// Debug log\nlocalStorage.setItem(\"cart\",JSON.stringify(newCart));// Update localStorage\nreturn newCart;});};const removeFromCart=productId=>{console.log(\"Removing product from cart:\",productId);// Debug log\nsetCart(prevCart=>{const updatedCart=prevCart.filter(item=>item.data.id!==productId);console.log(\"New cart after remove:\",updatedCart);// Debug log\nlocalStorage.setItem(\"cart\",JSON.stringify(updatedCart));// Update localStorage\nreturn updatedCart;});};const updateCartQuantity=(itemId,newQuantity)=>{console.log(\"Updating quantity for item:\",itemId,\"New quantity:\",newQuantity);// Debug log\nsetCart(prevCart=>{const updatedCart=prevCart.map(item=>item.data.id===itemId?_objectSpread(_objectSpread({},item),{},{quantity:newQuantity}):item);console.log(\"New cart after quantity update:\",updatedCart);// Debug log\nlocalStorage.setItem(\"cart\",JSON.stringify(updatedCart));// Update localStorage\nreturn updatedCart;});};const clearCart=()=>{console.log(\"Clearing cart\");// Debug log\nsetCart([]);localStorage.removeItem(\"cart\");// Remove cart from localStorage\n};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cart,addToCart,removeFromCart,updateCartQuantity,clearCart,updateCart},children:children});}export function useCart(){return useContext(CartContext);}","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsx","_jsx","CartContext","CartProvider","_ref","children","cart","setCart","savedCart","localStorage","getItem","console","log","JSON","parse","length","setItem","stringify","updateCart","updatedCart","addToCart","product","prevCart","existingItem","find","item","data","id","newCart","map","_objectSpread","quantity","removeFromCart","productId","filter","updateCartQuantity","itemId","newQuantity","clearCart","removeItem","Provider","value","useCart"],"sources":["C:/Users/natno/OneDrive/เดสก์ท็อป/School-Project/ecom-react-natnoppol/src/hooks/CartContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem(\"cart\");\r\n    if (savedCart) {\r\n      console.log(\"Cart loaded from localStorage:\", savedCart); // Debug log\r\n      setCart(JSON.parse(savedCart)); // Set the cart from localStorage\r\n    } else {\r\n      console.log(\"No cart found in localStorage\"); // Debug log if there's no cart in localStorage\r\n    }\r\n  }, []);\r\n\r\n  // Keep localStorage in sync with state\r\n  useEffect(() => {\r\n    if (cart.length > 0) {\r\n      console.log(\"Updating localStorage with cart:\", cart); // Debug log\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart)); // Sync with localStorage\r\n    }\r\n  }, [cart]);\r\n\r\n  const updateCart = (updatedCart) => {\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const addToCart = (product) => {\r\n    console.log(\"Adding product to cart:\", product); // Debug log\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find((item) => item.data.id === product.data.id);\r\n      let newCart;\r\n\r\n      if (existingItem) {\r\n        newCart = prevCart.map((item) =>\r\n          item.data.id === product.data.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        newCart = [...prevCart, { data: product.data, quantity: 1 }];\r\n      }\r\n\r\n      console.log(\"New cart after add:\", newCart); // Debug log\r\n      localStorage.setItem(\"cart\", JSON.stringify(newCart)); // Update localStorage\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    console.log(\"Removing product from cart:\", productId); // Debug log\r\n    setCart((prevCart) => {\r\n      const updatedCart = prevCart.filter((item) => item.data.id !== productId);\r\n      console.log(\"New cart after remove:\", updatedCart); // Debug log\r\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart)); // Update localStorage\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const updateCartQuantity = (itemId, newQuantity) => {\r\n    console.log(\"Updating quantity for item:\", itemId, \"New quantity:\", newQuantity); // Debug log\r\n    setCart((prevCart) => {\r\n      const updatedCart = prevCart.map((item) =>\r\n        item.data.id === itemId\r\n          ? { ...item, quantity: newQuantity }\r\n          : item\r\n      );\r\n      console.log(\"New cart after quantity update:\", updatedCart); // Debug log\r\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart)); // Update localStorage\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    console.log(\"Clearing cart\"); // Debug log\r\n    setCart([]); \r\n    localStorage.removeItem(\"cart\"); // Remove cart from localStorage\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateCartQuantity, clearCart, updateCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}